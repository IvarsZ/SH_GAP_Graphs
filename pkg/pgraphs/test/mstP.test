testMSTP := function(graph, expectedMSTWeight)
  local edges, edge, actualMSTWeight;

  edges := MinimumSpanningTreeP(graph);

  actualMSTWeight := 0;
  for edge in edges do
    actualMSTWeight := actualMSTWeight + GetWeightedEdgeP(graph, edge[1], edge[2]);
  od;

  if actualMSTWeight = expectedMSTWeight then
    Print("mstp test successful\n");
  else  
    Print("Error in mstp test\n");
    Print("expected weight: ", expectedMSTWeight, "\n");
    Print("actual weight: ", actualMSTWeight, "\n");
    Print("mst edges: ", edges, "\n");
    Print("graph: ", graphPToSuccessors(graph), "\n");
    Print("weights: ", graphPToWeights(graph), "\n");
  fi;
end;

w := WeightedGraphP([[2, 3, 4, 5], [1, 5], [1, 4, 6, 7], [1, 3, 5, 7], [1, 2, 4, 7, 8], [3, 7], [3, 4, 5, 6, 8], [5, 7]], [[2, 2, 5, 5], [2, 1], [2, 2, 10, 5], [5, 2, 10, 3], [5, 1, 10, 10, 10], [10, 9], [5, 3, 10, 3, 3], [10, 3]]);
testMSTP(w, 22);


w := WeightedGraphP([[2, 3, 8, 9], [1, 3, 5, 6], [1, 2, 4, 7, 9], [3, 7], [2, 6, 7], [2, 5, 7], [3, 4, 5, 6, 9], [1, 9], [1, 3, 7, 8], []], [[1, 6, 6, 6], [1, 6, 6, 4], [6, 6, 1, 2, 6], [1, 6], [6, 5, 6], [4, 5, 3], [2, 6, 6, 3, 3], [6, 1], [6, 6, 3, 1], []]);
testMSTP(w, 20);

w := WeightedGraphP([ [ 6, 4 ], [ 5, 7 ], [ 9, 10 ], [ 10, 8, 1 ], [ 6, 2 ], 
  [ 1, 5 ], [ 2, 9 ], [ 4 ], [ 7, 3 ], [ 3, 4 ] ],
[ [ 5, 9 ], [ 3, 4 ], [ 2, 10 ], [ 7, 3, 9 ], [ 2, 3 ], [ 5, 2 ], 
  [ 4, 8 ], [ 3 ], [ 8, 2 ], [ 10, 7 ] ]);
testMSTP(w, 43);

w := WeightedGraphP([ [ 8, 8, 10 ], [ 5, 10 ], [ 9, 5 ], [ 6, 5, 8, 10 ], 
  [ 4, 2, 3, 7 ], [ 7, 4, 7 ], [ 8, 6, 5, 6 ], [ 1, 7, 1, 4 ], 
  [ 10, 3 ], [ 2, 9, 1, 4 ] ], [ [ 3, 3, 7 ], [ 7, 1 ], [ 5, 4 ], 
  [ 5, 9, 7, 4 ], [ 9, 7, 4, 7 ], [ 10, 5, 1 ], [ 6, 10, 7, 1 ], 
  [ 3, 6, 3, 7 ], [ 8, 5 ], [ 1, 8, 7, 4 ] ]);
testMSTP(w, 36);

w := WeightedGraphP([ [ 7 ], [ 9, 10, 5, 7, 11 ], [ 8, 11, 7 ], [ 10, 6, 9 ], [ 11, 2 ], 
  [ 4, 8, 11 ], [ 1, 9, 2, 3, 8 ], [ 6, 3, 7 ], [ 7, 2, 4 ], [ 2, 4 ], 
  [ 3, 5, 2, 6 ] ], [ [ 8 ], [ 9, 11, 2, 8, 9 ], [ 10, 1, 7 ], 
  [ 3, 7, 9 ], [ 11, 2 ], [ 7, 11, 11 ], [ 8, 6, 8, 7, 10 ], 
  [ 11, 10, 10 ], [ 6, 9, 9 ], [ 11, 3 ], [ 1, 11, 9, 11 ] ]);
testMSTP(w, 61);

w := WeightedGraphP([ [ 11 ], [ 7, 13 ], [ 8, 7 ], [ 12, 6 ], [ 11, 8 ], [ 4, 14 ], [ 3, 2 ], [ 5, 3 ], [ 10, 15 ], [ 14, 9 ], [ 1, 5, 14 ], [ 13, 4 ], [ 2, 12 ], [ 6, 10, 11 ], [ 9 ] ], [ [ 13 ], [ 5, 4 ], [ 15, 8 ], [ 1, 8 ], [ 8, 10 ], [ 8, 4 ], [ 8, 5 ], [ 10, 15 ], [ 6, 6 ], [ 2, 6 ], [ 13, 8, 2 ], [ 5, 1 ], [ 4, 5 ], [ 4, 2, 2 ], [ 6 ] ]);
testMSTP(w, 82);

w := WeightedGraphP([ [ 8, 2, 3, 12, 13 ], [ 12, 14, 1, 3, 5, 6, 7, 8, 10, 11, 13 ], 
  [ 13, 9, 1, 2, 5, 6, 7, 10, 11 ], [ 14, 13, 5, 6, 7, 10, 11 ], 
  [ 8, 7, 2, 3, 4, 6, 9, 11, 12, 13, 14 ], [ 11, 12, 2, 3, 4, 5, 9, 10 ], 
  [ 5, 11, 2, 3, 4, 12, 14 ], [ 1, 5, 2, 10, 14 ], [ 3, 10, 5, 6, 13 ], 
  [ 9, 2, 3, 4, 6, 8 ], [ 7, 6, 2, 3, 4, 5, 14 ], [ 6, 2, 1, 5, 7 ], 
  [ 4, 3, 1, 2, 5, 9 ], [ 2, 4, 5, 7, 8, 11 ] ], 
[ [ 2, 11, 5, 3, 3 ], [ 12, 2, 11, 4, 3, 10, 4, 8, 3, 7, 12 ], 
  [ 6, 6, 5, 4, 9, 5, 10, 6, 3 ], [ 7, 6, 1, 12, 12, 1, 6 ], 
  [ 7, 4, 3, 9, 1, 12, 10, 9, 5, 12, 14 ], [ 5, 8, 10, 5, 12, 12, 7, 13 ],
  [ 4, 9, 4, 10, 12, 5, 9 ], [ 2, 7, 8, 8, 5 ], [ 6, 11, 10, 7, 4 ], 
  [ 11, 3, 6, 1, 13, 8 ], [ 9, 5, 7, 3, 6, 9, 14 ], [ 8, 12, 3, 5, 5 ], 
  [ 6, 6, 3, 12, 12, 4 ], [ 2, 7, 14, 9, 5, 14 ] ]);
testMSTP(w, 40);

